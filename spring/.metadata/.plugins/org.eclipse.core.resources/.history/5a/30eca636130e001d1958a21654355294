package com.test.spring;

import java.io.File;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

@Controller
public class FileController {
	
	@GetMapping(value="/add")
	public String add() {
		
		return "add";
	}
	
	@PostMapping(value="/addok")
	public String addok(String data, HttpServletRequest req, Model model) {
		
		//1. 데이터 가져오기
		//- 텍스트 데이터
		//- 파일 데이터
		
		//<form> 기본 > HttpServletRequest 전달
		//<form> 파일 > MultipartHttpServletRequest 전달
		
		MultipartHttpServletRequest multi = (MultipartHttpServletRequest)req;
		MultipartFile file = multi.getFile("attach");
		
		System.out.println(file.getName());
		System.out.println(file.getOriginalFilename());
		System.out.println(file.getContentType());
		System.out.println(file.getSize());
		
		//파일 업로드 완료 > 파일이 어디 있는지?? > 임시 폴더에 저장 > 우리가 원하는 곳으로 이동
		String filename = file.getOriginalFilename();
		String path = req.getRealPath("resources/files");
		
		System.out.println(path);
		
		//파일명 중복 방지
		filename = getFileName(path, filename);
		
		//파일 이동하기
		File file2 = new File(path + "\\" + filename); //희망 경로
		
		try {
			
			//file.renameTo(file2)
			
			file.transferTo(file2); //임시 폴더 > 업로드 폴더
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		model.addAttribute("filename", filename);
		
		return "addok";
	}

	private String getFileName(String path, String filename) {

		//저장 폴더의 파일명을 중복되지 않게 만들기
		//path = "resources/files/"
		//fileanme = "MyBatis.png"
		
		int n = 1; //인덱싱 숫자
		int index = filename.lastIndexOf(".");
		
		String tempName = filename.substring(0, index);
		String tempExt = filename.substring(index);
		
		
		while(true) {
			
			File file = new File(path + "\\" + filename); //files\MyBatis.png
			
			if (file.exists()) {
				//있다. > 중복 > 파일 변경
				filename = tempName + "_" + n + tempExt;
				n++;
			} else {
				
				return filename;
			}
			
		}
		
		
	}

}






































